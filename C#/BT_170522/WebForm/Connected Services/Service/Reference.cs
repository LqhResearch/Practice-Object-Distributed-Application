//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebForm.Service {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CT_DaoTao", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class CT_DaoTao : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaCTDTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenCTDTField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaCTDT {
            get {
                return this.MaCTDTField;
            }
            set {
                if ((object.ReferenceEquals(this.MaCTDTField, value) != true)) {
                    this.MaCTDTField = value;
                    this.RaisePropertyChanged("MaCTDT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenCTDT {
            get {
                return this.TenCTDTField;
            }
            set {
                if ((object.ReferenceEquals(this.TenCTDTField, value) != true)) {
                    this.TenCTDTField = value;
                    this.RaisePropertyChanged("TenCTDT");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KhoaHoc", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class KhoaHoc : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebForm.Service.CT_DaoTao CT_DaoTaoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaCTDTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaKHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenKHField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebForm.Service.CT_DaoTao CT_DaoTao {
            get {
                return this.CT_DaoTaoField;
            }
            set {
                if ((object.ReferenceEquals(this.CT_DaoTaoField, value) != true)) {
                    this.CT_DaoTaoField = value;
                    this.RaisePropertyChanged("CT_DaoTao");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaCTDT {
            get {
                return this.MaCTDTField;
            }
            set {
                if ((object.ReferenceEquals(this.MaCTDTField, value) != true)) {
                    this.MaCTDTField = value;
                    this.RaisePropertyChanged("MaCTDT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaKH {
            get {
                return this.MaKHField;
            }
            set {
                if ((object.ReferenceEquals(this.MaKHField, value) != true)) {
                    this.MaKHField = value;
                    this.RaisePropertyChanged("MaKH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenKH {
            get {
                return this.TenKHField;
            }
            set {
                if ((object.ReferenceEquals(this.TenKHField, value) != true)) {
                    this.TenKHField = value;
                    this.RaisePropertyChanged("TenKH");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lop", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class Lop : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebForm.Service.KhoaHoc KhoaHocField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaKHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaLopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenLopField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebForm.Service.KhoaHoc KhoaHoc {
            get {
                return this.KhoaHocField;
            }
            set {
                if ((object.ReferenceEquals(this.KhoaHocField, value) != true)) {
                    this.KhoaHocField = value;
                    this.RaisePropertyChanged("KhoaHoc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaKH {
            get {
                return this.MaKHField;
            }
            set {
                if ((object.ReferenceEquals(this.MaKHField, value) != true)) {
                    this.MaKHField = value;
                    this.RaisePropertyChanged("MaKH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaLop {
            get {
                return this.MaLopField;
            }
            set {
                if ((object.ReferenceEquals(this.MaLopField, value) != true)) {
                    this.MaLopField = value;
                    this.RaisePropertyChanged("MaLop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenLop {
            get {
                return this.TenLopField;
            }
            set {
                if ((object.ReferenceEquals(this.TenLopField, value) != true)) {
                    this.TenLopField = value;
                    this.RaisePropertyChanged("TenLop");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonHoc", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class MonHoc : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaMHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenMHField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaMH {
            get {
                return this.MaMHField;
            }
            set {
                if ((object.ReferenceEquals(this.MaMHField, value) != true)) {
                    this.MaMHField = value;
                    this.RaisePropertyChanged("MaMH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenMH {
            get {
                return this.TenMHField;
            }
            set {
                if ((object.ReferenceEquals(this.TenMHField, value) != true)) {
                    this.TenMHField = value;
                    this.RaisePropertyChanged("TenMH");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SinhVien", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class SinhVien : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GioiTinhField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HoTenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebForm.Service.Lop LopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaLopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaSVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> NgaySinhField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoiSinhField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GioiTinh {
            get {
                return this.GioiTinhField;
            }
            set {
                if ((object.ReferenceEquals(this.GioiTinhField, value) != true)) {
                    this.GioiTinhField = value;
                    this.RaisePropertyChanged("GioiTinh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HoTen {
            get {
                return this.HoTenField;
            }
            set {
                if ((object.ReferenceEquals(this.HoTenField, value) != true)) {
                    this.HoTenField = value;
                    this.RaisePropertyChanged("HoTen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebForm.Service.Lop Lop {
            get {
                return this.LopField;
            }
            set {
                if ((object.ReferenceEquals(this.LopField, value) != true)) {
                    this.LopField = value;
                    this.RaisePropertyChanged("Lop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaLop {
            get {
                return this.MaLopField;
            }
            set {
                if ((object.ReferenceEquals(this.MaLopField, value) != true)) {
                    this.MaLopField = value;
                    this.RaisePropertyChanged("MaLop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaSV {
            get {
                return this.MaSVField;
            }
            set {
                if ((object.ReferenceEquals(this.MaSVField, value) != true)) {
                    this.MaSVField = value;
                    this.RaisePropertyChanged("MaSV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> NgaySinh {
            get {
                return this.NgaySinhField;
            }
            set {
                if ((this.NgaySinhField.Equals(value) != true)) {
                    this.NgaySinhField = value;
                    this.RaisePropertyChanged("NgaySinh");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NoiSinh {
            get {
                return this.NoiSinhField;
            }
            set {
                if ((object.ReferenceEquals(this.NoiSinhField, value) != true)) {
                    this.NoiSinhField = value;
                    this.RaisePropertyChanged("NoiSinh");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KetQuaThi", Namespace="http://schemas.datacontract.org/2004/07/WcfService")]
    [System.SerializableAttribute()]
    public partial class KetQuaThi : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double DiemThiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LanThiField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaMHField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaSVField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebForm.Service.MonHoc MonHocField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebForm.Service.SinhVien SinhVienField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double DiemThi {
            get {
                return this.DiemThiField;
            }
            set {
                if ((this.DiemThiField.Equals(value) != true)) {
                    this.DiemThiField = value;
                    this.RaisePropertyChanged("DiemThi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LanThi {
            get {
                return this.LanThiField;
            }
            set {
                if ((this.LanThiField.Equals(value) != true)) {
                    this.LanThiField = value;
                    this.RaisePropertyChanged("LanThi");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaMH {
            get {
                return this.MaMHField;
            }
            set {
                if ((object.ReferenceEquals(this.MaMHField, value) != true)) {
                    this.MaMHField = value;
                    this.RaisePropertyChanged("MaMH");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaSV {
            get {
                return this.MaSVField;
            }
            set {
                if ((object.ReferenceEquals(this.MaSVField, value) != true)) {
                    this.MaSVField = value;
                    this.RaisePropertyChanged("MaSV");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebForm.Service.MonHoc MonHoc {
            get {
                return this.MonHocField;
            }
            set {
                if ((object.ReferenceEquals(this.MonHocField, value) != true)) {
                    this.MonHocField = value;
                    this.RaisePropertyChanged("MonHoc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebForm.Service.SinhVien SinhVien {
            get {
                return this.SinhVienField;
            }
            set {
                if ((object.ReferenceEquals(this.SinhVienField, value) != true)) {
                    this.SinhVienField = value;
                    this.RaisePropertyChanged("SinhVien");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEducates", ReplyAction="http://tempuri.org/IService1/GetEducatesResponse")]
        WebForm.Service.CT_DaoTao[] GetEducates();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetEducates", ReplyAction="http://tempuri.org/IService1/GetEducatesResponse")]
        System.Threading.Tasks.Task<WebForm.Service.CT_DaoTao[]> GetEducatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchEducate", ReplyAction="http://tempuri.org/IService1/SearchEducateResponse")]
        WebForm.Service.CT_DaoTao SearchEducate(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchEducate", ReplyAction="http://tempuri.org/IService1/SearchEducateResponse")]
        System.Threading.Tasks.Task<WebForm.Service.CT_DaoTao> SearchEducateAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchKeywordEducates", ReplyAction="http://tempuri.org/IService1/SearchKeywordEducatesResponse")]
        WebForm.Service.CT_DaoTao[] SearchKeywordEducates(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchKeywordEducates", ReplyAction="http://tempuri.org/IService1/SearchKeywordEducatesResponse")]
        System.Threading.Tasks.Task<WebForm.Service.CT_DaoTao[]> SearchKeywordEducatesAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddEducate", ReplyAction="http://tempuri.org/IService1/AddEducateResponse")]
        bool AddEducate(string id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddEducate", ReplyAction="http://tempuri.org/IService1/AddEducateResponse")]
        System.Threading.Tasks.Task<bool> AddEducateAsync(string id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditEducate", ReplyAction="http://tempuri.org/IService1/EditEducateResponse")]
        bool EditEducate(string id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditEducate", ReplyAction="http://tempuri.org/IService1/EditEducateResponse")]
        System.Threading.Tasks.Task<bool> EditEducateAsync(string id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEducate", ReplyAction="http://tempuri.org/IService1/DeleteEducateResponse")]
        bool DeleteEducate(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteEducate", ReplyAction="http://tempuri.org/IService1/DeleteEducateResponse")]
        System.Threading.Tasks.Task<bool> DeleteEducateAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCourses", ReplyAction="http://tempuri.org/IService1/GetCoursesResponse")]
        WebForm.Service.KhoaHoc[] GetCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCourses", ReplyAction="http://tempuri.org/IService1/GetCoursesResponse")]
        System.Threading.Tasks.Task<WebForm.Service.KhoaHoc[]> GetCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchCourse", ReplyAction="http://tempuri.org/IService1/SearchCourseResponse")]
        WebForm.Service.KhoaHoc SearchCourse(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchCourse", ReplyAction="http://tempuri.org/IService1/SearchCourseResponse")]
        System.Threading.Tasks.Task<WebForm.Service.KhoaHoc> SearchCourseAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchKeywordCourses", ReplyAction="http://tempuri.org/IService1/SearchKeywordCoursesResponse")]
        WebForm.Service.KhoaHoc[] SearchKeywordCourses(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchKeywordCourses", ReplyAction="http://tempuri.org/IService1/SearchKeywordCoursesResponse")]
        System.Threading.Tasks.Task<WebForm.Service.KhoaHoc[]> SearchKeywordCoursesAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCourse", ReplyAction="http://tempuri.org/IService1/AddCourseResponse")]
        bool AddCourse(string id, string name, string educate_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddCourse", ReplyAction="http://tempuri.org/IService1/AddCourseResponse")]
        System.Threading.Tasks.Task<bool> AddCourseAsync(string id, string name, string educate_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCourse", ReplyAction="http://tempuri.org/IService1/EditCourseResponse")]
        bool EditCourse(string id, string name, string educate_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditCourse", ReplyAction="http://tempuri.org/IService1/EditCourseResponse")]
        System.Threading.Tasks.Task<bool> EditCourseAsync(string id, string name, string educate_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCourse", ReplyAction="http://tempuri.org/IService1/DeleteCourseResponse")]
        bool DeleteCourse(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteCourse", ReplyAction="http://tempuri.org/IService1/DeleteCourseResponse")]
        System.Threading.Tasks.Task<bool> DeleteCourseAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClasses", ReplyAction="http://tempuri.org/IService1/GetClassesResponse")]
        WebForm.Service.Lop[] GetClasses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClasses", ReplyAction="http://tempuri.org/IService1/GetClassesResponse")]
        System.Threading.Tasks.Task<WebForm.Service.Lop[]> GetClassesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchClass", ReplyAction="http://tempuri.org/IService1/SearchClassResponse")]
        WebForm.Service.Lop SearchClass(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchClass", ReplyAction="http://tempuri.org/IService1/SearchClassResponse")]
        System.Threading.Tasks.Task<WebForm.Service.Lop> SearchClassAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchKeywordClasses", ReplyAction="http://tempuri.org/IService1/SearchKeywordClassesResponse")]
        WebForm.Service.Lop[] SearchKeywordClasses(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchKeywordClasses", ReplyAction="http://tempuri.org/IService1/SearchKeywordClassesResponse")]
        System.Threading.Tasks.Task<WebForm.Service.Lop[]> SearchKeywordClassesAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddClass", ReplyAction="http://tempuri.org/IService1/AddClassResponse")]
        bool AddClass(string id, string name, string course_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddClass", ReplyAction="http://tempuri.org/IService1/AddClassResponse")]
        System.Threading.Tasks.Task<bool> AddClassAsync(string id, string name, string course_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditClass", ReplyAction="http://tempuri.org/IService1/EditClassResponse")]
        bool EditClass(string id, string name, string course_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditClass", ReplyAction="http://tempuri.org/IService1/EditClassResponse")]
        System.Threading.Tasks.Task<bool> EditClassAsync(string id, string name, string course_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteClass", ReplyAction="http://tempuri.org/IService1/DeleteClassResponse")]
        bool DeleteClass(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteClass", ReplyAction="http://tempuri.org/IService1/DeleteClassResponse")]
        System.Threading.Tasks.Task<bool> DeleteClassAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubjects", ReplyAction="http://tempuri.org/IService1/GetSubjectsResponse")]
        WebForm.Service.MonHoc[] GetSubjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetSubjects", ReplyAction="http://tempuri.org/IService1/GetSubjectsResponse")]
        System.Threading.Tasks.Task<WebForm.Service.MonHoc[]> GetSubjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchSubject", ReplyAction="http://tempuri.org/IService1/SearchSubjectResponse")]
        WebForm.Service.MonHoc SearchSubject(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchSubject", ReplyAction="http://tempuri.org/IService1/SearchSubjectResponse")]
        System.Threading.Tasks.Task<WebForm.Service.MonHoc> SearchSubjectAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchKeywordSubjects", ReplyAction="http://tempuri.org/IService1/SearchKeywordSubjectsResponse")]
        WebForm.Service.MonHoc[] SearchKeywordSubjects(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchKeywordSubjects", ReplyAction="http://tempuri.org/IService1/SearchKeywordSubjectsResponse")]
        System.Threading.Tasks.Task<WebForm.Service.MonHoc[]> SearchKeywordSubjectsAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddSubject", ReplyAction="http://tempuri.org/IService1/AddSubjectResponse")]
        bool AddSubject(string id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddSubject", ReplyAction="http://tempuri.org/IService1/AddSubjectResponse")]
        System.Threading.Tasks.Task<bool> AddSubjectAsync(string id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditSubject", ReplyAction="http://tempuri.org/IService1/EditSubjectResponse")]
        bool EditSubject(string id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditSubject", ReplyAction="http://tempuri.org/IService1/EditSubjectResponse")]
        System.Threading.Tasks.Task<bool> EditSubjectAsync(string id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSubject", ReplyAction="http://tempuri.org/IService1/DeleteSubjectResponse")]
        bool DeleteSubject(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteSubject", ReplyAction="http://tempuri.org/IService1/DeleteSubjectResponse")]
        System.Threading.Tasks.Task<bool> DeleteSubjectAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudents", ReplyAction="http://tempuri.org/IService1/GetStudentsResponse")]
        WebForm.Service.SinhVien[] GetStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStudents", ReplyAction="http://tempuri.org/IService1/GetStudentsResponse")]
        System.Threading.Tasks.Task<WebForm.Service.SinhVien[]> GetStudentsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchStudent", ReplyAction="http://tempuri.org/IService1/SearchStudentResponse")]
        WebForm.Service.SinhVien SearchStudent(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchStudent", ReplyAction="http://tempuri.org/IService1/SearchStudentResponse")]
        System.Threading.Tasks.Task<WebForm.Service.SinhVien> SearchStudentAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchKeywordStudents", ReplyAction="http://tempuri.org/IService1/SearchKeywordStudentsResponse")]
        WebForm.Service.SinhVien[] SearchKeywordStudents(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchKeywordStudents", ReplyAction="http://tempuri.org/IService1/SearchKeywordStudentsResponse")]
        System.Threading.Tasks.Task<WebForm.Service.SinhVien[]> SearchKeywordStudentsAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddStudent", ReplyAction="http://tempuri.org/IService1/AddStudentResponse")]
        bool AddStudent(string id, string name, string gender, System.DateTime birth, string place, string class_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddStudent", ReplyAction="http://tempuri.org/IService1/AddStudentResponse")]
        System.Threading.Tasks.Task<bool> AddStudentAsync(string id, string name, string gender, System.DateTime birth, string place, string class_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditStudent", ReplyAction="http://tempuri.org/IService1/EditStudentResponse")]
        bool EditStudent(string id, string name, string gender, System.DateTime birth, string place, string class_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditStudent", ReplyAction="http://tempuri.org/IService1/EditStudentResponse")]
        System.Threading.Tasks.Task<bool> EditStudentAsync(string id, string name, string gender, System.DateTime birth, string place, string class_id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStudent", ReplyAction="http://tempuri.org/IService1/DeleteStudentResponse")]
        bool DeleteStudent(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteStudent", ReplyAction="http://tempuri.org/IService1/DeleteStudentResponse")]
        System.Threading.Tasks.Task<bool> DeleteStudentAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExamResults", ReplyAction="http://tempuri.org/IService1/GetExamResultsResponse")]
        WebForm.Service.KetQuaThi[] GetExamResults();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetExamResults", ReplyAction="http://tempuri.org/IService1/GetExamResultsResponse")]
        System.Threading.Tasks.Task<WebForm.Service.KetQuaThi[]> GetExamResultsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchExamResult", ReplyAction="http://tempuri.org/IService1/SearchExamResultResponse")]
        WebForm.Service.KetQuaThi SearchExamResult(string student_id, string subject_id, int times);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchExamResult", ReplyAction="http://tempuri.org/IService1/SearchExamResultResponse")]
        System.Threading.Tasks.Task<WebForm.Service.KetQuaThi> SearchExamResultAsync(string student_id, string subject_id, int times);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchKeywordExamResults", ReplyAction="http://tempuri.org/IService1/SearchKeywordExamResultsResponse")]
        WebForm.Service.KetQuaThi[] SearchKeywordExamResults(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchKeywordExamResults", ReplyAction="http://tempuri.org/IService1/SearchKeywordExamResultsResponse")]
        System.Threading.Tasks.Task<WebForm.Service.KetQuaThi[]> SearchKeywordExamResultsAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddExamResult", ReplyAction="http://tempuri.org/IService1/AddExamResultResponse")]
        bool AddExamResult(string student_id, string subject_id, int times, double point);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddExamResult", ReplyAction="http://tempuri.org/IService1/AddExamResultResponse")]
        System.Threading.Tasks.Task<bool> AddExamResultAsync(string student_id, string subject_id, int times, double point);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditExamResult", ReplyAction="http://tempuri.org/IService1/EditExamResultResponse")]
        bool EditExamResult(string student_id, string subject_id, int times, double point);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditExamResult", ReplyAction="http://tempuri.org/IService1/EditExamResultResponse")]
        System.Threading.Tasks.Task<bool> EditExamResultAsync(string student_id, string subject_id, int times, double point);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteExamResult", ReplyAction="http://tempuri.org/IService1/DeleteExamResultResponse")]
        bool DeleteExamResult(string student_id, string subject_id, int times);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteExamResult", ReplyAction="http://tempuri.org/IService1/DeleteExamResultResponse")]
        System.Threading.Tasks.Task<bool> DeleteExamResultAsync(string student_id, string subject_id, int times);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebForm.Service.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebForm.Service.IService1>, WebForm.Service.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebForm.Service.CT_DaoTao[] GetEducates() {
            return base.Channel.GetEducates();
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.CT_DaoTao[]> GetEducatesAsync() {
            return base.Channel.GetEducatesAsync();
        }
        
        public WebForm.Service.CT_DaoTao SearchEducate(string id) {
            return base.Channel.SearchEducate(id);
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.CT_DaoTao> SearchEducateAsync(string id) {
            return base.Channel.SearchEducateAsync(id);
        }
        
        public WebForm.Service.CT_DaoTao[] SearchKeywordEducates(string keyword) {
            return base.Channel.SearchKeywordEducates(keyword);
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.CT_DaoTao[]> SearchKeywordEducatesAsync(string keyword) {
            return base.Channel.SearchKeywordEducatesAsync(keyword);
        }
        
        public bool AddEducate(string id, string name) {
            return base.Channel.AddEducate(id, name);
        }
        
        public System.Threading.Tasks.Task<bool> AddEducateAsync(string id, string name) {
            return base.Channel.AddEducateAsync(id, name);
        }
        
        public bool EditEducate(string id, string name) {
            return base.Channel.EditEducate(id, name);
        }
        
        public System.Threading.Tasks.Task<bool> EditEducateAsync(string id, string name) {
            return base.Channel.EditEducateAsync(id, name);
        }
        
        public bool DeleteEducate(string id) {
            return base.Channel.DeleteEducate(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteEducateAsync(string id) {
            return base.Channel.DeleteEducateAsync(id);
        }
        
        public WebForm.Service.KhoaHoc[] GetCourses() {
            return base.Channel.GetCourses();
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.KhoaHoc[]> GetCoursesAsync() {
            return base.Channel.GetCoursesAsync();
        }
        
        public WebForm.Service.KhoaHoc SearchCourse(string id) {
            return base.Channel.SearchCourse(id);
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.KhoaHoc> SearchCourseAsync(string id) {
            return base.Channel.SearchCourseAsync(id);
        }
        
        public WebForm.Service.KhoaHoc[] SearchKeywordCourses(string keyword) {
            return base.Channel.SearchKeywordCourses(keyword);
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.KhoaHoc[]> SearchKeywordCoursesAsync(string keyword) {
            return base.Channel.SearchKeywordCoursesAsync(keyword);
        }
        
        public bool AddCourse(string id, string name, string educate_id) {
            return base.Channel.AddCourse(id, name, educate_id);
        }
        
        public System.Threading.Tasks.Task<bool> AddCourseAsync(string id, string name, string educate_id) {
            return base.Channel.AddCourseAsync(id, name, educate_id);
        }
        
        public bool EditCourse(string id, string name, string educate_id) {
            return base.Channel.EditCourse(id, name, educate_id);
        }
        
        public System.Threading.Tasks.Task<bool> EditCourseAsync(string id, string name, string educate_id) {
            return base.Channel.EditCourseAsync(id, name, educate_id);
        }
        
        public bool DeleteCourse(string id) {
            return base.Channel.DeleteCourse(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteCourseAsync(string id) {
            return base.Channel.DeleteCourseAsync(id);
        }
        
        public WebForm.Service.Lop[] GetClasses() {
            return base.Channel.GetClasses();
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.Lop[]> GetClassesAsync() {
            return base.Channel.GetClassesAsync();
        }
        
        public WebForm.Service.Lop SearchClass(string id) {
            return base.Channel.SearchClass(id);
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.Lop> SearchClassAsync(string id) {
            return base.Channel.SearchClassAsync(id);
        }
        
        public WebForm.Service.Lop[] SearchKeywordClasses(string keyword) {
            return base.Channel.SearchKeywordClasses(keyword);
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.Lop[]> SearchKeywordClassesAsync(string keyword) {
            return base.Channel.SearchKeywordClassesAsync(keyword);
        }
        
        public bool AddClass(string id, string name, string course_id) {
            return base.Channel.AddClass(id, name, course_id);
        }
        
        public System.Threading.Tasks.Task<bool> AddClassAsync(string id, string name, string course_id) {
            return base.Channel.AddClassAsync(id, name, course_id);
        }
        
        public bool EditClass(string id, string name, string course_id) {
            return base.Channel.EditClass(id, name, course_id);
        }
        
        public System.Threading.Tasks.Task<bool> EditClassAsync(string id, string name, string course_id) {
            return base.Channel.EditClassAsync(id, name, course_id);
        }
        
        public bool DeleteClass(string id) {
            return base.Channel.DeleteClass(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClassAsync(string id) {
            return base.Channel.DeleteClassAsync(id);
        }
        
        public WebForm.Service.MonHoc[] GetSubjects() {
            return base.Channel.GetSubjects();
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.MonHoc[]> GetSubjectsAsync() {
            return base.Channel.GetSubjectsAsync();
        }
        
        public WebForm.Service.MonHoc SearchSubject(string id) {
            return base.Channel.SearchSubject(id);
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.MonHoc> SearchSubjectAsync(string id) {
            return base.Channel.SearchSubjectAsync(id);
        }
        
        public WebForm.Service.MonHoc[] SearchKeywordSubjects(string keyword) {
            return base.Channel.SearchKeywordSubjects(keyword);
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.MonHoc[]> SearchKeywordSubjectsAsync(string keyword) {
            return base.Channel.SearchKeywordSubjectsAsync(keyword);
        }
        
        public bool AddSubject(string id, string name) {
            return base.Channel.AddSubject(id, name);
        }
        
        public System.Threading.Tasks.Task<bool> AddSubjectAsync(string id, string name) {
            return base.Channel.AddSubjectAsync(id, name);
        }
        
        public bool EditSubject(string id, string name) {
            return base.Channel.EditSubject(id, name);
        }
        
        public System.Threading.Tasks.Task<bool> EditSubjectAsync(string id, string name) {
            return base.Channel.EditSubjectAsync(id, name);
        }
        
        public bool DeleteSubject(string id) {
            return base.Channel.DeleteSubject(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteSubjectAsync(string id) {
            return base.Channel.DeleteSubjectAsync(id);
        }
        
        public WebForm.Service.SinhVien[] GetStudents() {
            return base.Channel.GetStudents();
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.SinhVien[]> GetStudentsAsync() {
            return base.Channel.GetStudentsAsync();
        }
        
        public WebForm.Service.SinhVien SearchStudent(string id) {
            return base.Channel.SearchStudent(id);
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.SinhVien> SearchStudentAsync(string id) {
            return base.Channel.SearchStudentAsync(id);
        }
        
        public WebForm.Service.SinhVien[] SearchKeywordStudents(string keyword) {
            return base.Channel.SearchKeywordStudents(keyword);
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.SinhVien[]> SearchKeywordStudentsAsync(string keyword) {
            return base.Channel.SearchKeywordStudentsAsync(keyword);
        }
        
        public bool AddStudent(string id, string name, string gender, System.DateTime birth, string place, string class_id) {
            return base.Channel.AddStudent(id, name, gender, birth, place, class_id);
        }
        
        public System.Threading.Tasks.Task<bool> AddStudentAsync(string id, string name, string gender, System.DateTime birth, string place, string class_id) {
            return base.Channel.AddStudentAsync(id, name, gender, birth, place, class_id);
        }
        
        public bool EditStudent(string id, string name, string gender, System.DateTime birth, string place, string class_id) {
            return base.Channel.EditStudent(id, name, gender, birth, place, class_id);
        }
        
        public System.Threading.Tasks.Task<bool> EditStudentAsync(string id, string name, string gender, System.DateTime birth, string place, string class_id) {
            return base.Channel.EditStudentAsync(id, name, gender, birth, place, class_id);
        }
        
        public bool DeleteStudent(string id) {
            return base.Channel.DeleteStudent(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteStudentAsync(string id) {
            return base.Channel.DeleteStudentAsync(id);
        }
        
        public WebForm.Service.KetQuaThi[] GetExamResults() {
            return base.Channel.GetExamResults();
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.KetQuaThi[]> GetExamResultsAsync() {
            return base.Channel.GetExamResultsAsync();
        }
        
        public WebForm.Service.KetQuaThi SearchExamResult(string student_id, string subject_id, int times) {
            return base.Channel.SearchExamResult(student_id, subject_id, times);
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.KetQuaThi> SearchExamResultAsync(string student_id, string subject_id, int times) {
            return base.Channel.SearchExamResultAsync(student_id, subject_id, times);
        }
        
        public WebForm.Service.KetQuaThi[] SearchKeywordExamResults(string keyword) {
            return base.Channel.SearchKeywordExamResults(keyword);
        }
        
        public System.Threading.Tasks.Task<WebForm.Service.KetQuaThi[]> SearchKeywordExamResultsAsync(string keyword) {
            return base.Channel.SearchKeywordExamResultsAsync(keyword);
        }
        
        public bool AddExamResult(string student_id, string subject_id, int times, double point) {
            return base.Channel.AddExamResult(student_id, subject_id, times, point);
        }
        
        public System.Threading.Tasks.Task<bool> AddExamResultAsync(string student_id, string subject_id, int times, double point) {
            return base.Channel.AddExamResultAsync(student_id, subject_id, times, point);
        }
        
        public bool EditExamResult(string student_id, string subject_id, int times, double point) {
            return base.Channel.EditExamResult(student_id, subject_id, times, point);
        }
        
        public System.Threading.Tasks.Task<bool> EditExamResultAsync(string student_id, string subject_id, int times, double point) {
            return base.Channel.EditExamResultAsync(student_id, subject_id, times, point);
        }
        
        public bool DeleteExamResult(string student_id, string subject_id, int times) {
            return base.Channel.DeleteExamResult(student_id, subject_id, times);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteExamResultAsync(string student_id, string subject_id, int times) {
            return base.Channel.DeleteExamResultAsync(student_id, subject_id, times);
        }
    }
}
